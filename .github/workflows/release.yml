name: Release on Tag

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    name: Build and Release Binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Get tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build xoned binary
        run: make build

      - name: Rename binary with platform and version
        run: |
          mv xoned xoned-linux-amd64-${{ steps.get_tag.outputs.TAG_NAME }}

      - name: Verify binary
        run: |
          ls -lh xoned-linux-amd64-${{ steps.get_tag.outputs.TAG_NAME }}
          file xoned-linux-amd64-${{ steps.get_tag.outputs.TAG_NAME }}
          ./xoned-linux-amd64-${{ steps.get_tag.outputs.TAG_NAME }} version || true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: xoned-linux-amd64-${{ steps.get_tag.outputs.TAG_NAME }}
          tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
          name: Release ${{ steps.get_tag.outputs.TAG_NAME }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get tag name
        id: get_tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=${TAG}" >> $GITHUB_OUTPUT
          echo "Extracted tag: ${TAG}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: xonechain/xoned
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo "Image pushed successfully to xonechain/xoned:${{ steps.get_tag.outputs.TAG_NAME }}"
